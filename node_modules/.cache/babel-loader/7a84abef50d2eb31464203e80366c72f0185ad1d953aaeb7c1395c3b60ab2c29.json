{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\Java Project Final\\\\Java-Project\\\\FrontEnd\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    if (token && userData) {\n      setUser(userData);\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token,\n          email: userEmail,\n          role,\n          userId,\n          message\n        } = response.data.data;\n        localStorage.setItem('authToken', token);\n        localStorage.setItem('userData', JSON.stringify({\n          email: userEmail,\n          role,\n          userId\n        }));\n        setUser({\n          email: userEmail,\n          role,\n          userId\n        });\n        return {\n          success: true,\n          message: message || 'Login successful!'\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.';\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const registerDonor = async donorData => {\n    try {\n      const response = await authAPI.registerDonor(donorData);\n      return handleRegistrationResponse(response);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.';\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const registerNGO = async ngoData => {\n    try {\n      const response = await authAPI.registerNGO(ngoData);\n      return handleRegistrationResponse(response);\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Registration failed. Please try again.';\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const registerAdmin = async adminData => {\n    try {\n      const response = await authAPI.registerAdmin(adminData);\n      return handleRegistrationResponse(response);\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Registration failed. Please try again.';\n      return {\n        success: false,\n        message: errorMessage\n      };\n    }\n  };\n  const handleRegistrationResponse = response => {\n    if (response.data.success) {\n      const {\n        token,\n        email,\n        role,\n        userId,\n        message\n      } = response.data.data;\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('userData', JSON.stringify({\n        email,\n        role,\n        userId\n      }));\n      setUser({\n        email,\n        role,\n        userId\n      });\n      return {\n        success: true,\n        message: message || 'Registration successful!'\n      };\n    } else {\n      return {\n        success: false,\n        message: response.data.message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userData');\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    registerDonor,\n    registerNGO,\n    registerAdmin,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","userData","JSON","parse","login","email","password","response","data","success","userEmail","role","userId","message","setItem","stringify","error","_error$response","_error$response$data","errorMessage","registerDonor","donorData","handleRegistrationResponse","_error$response2","_error$response2$data","registerNGO","ngoData","_error$response3","_error$response3$data","registerAdmin","adminData","_error$response4","_error$response4$data","logout","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/Java Project Final/Java-Project/FrontEnd/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    const userData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n    if (token && userData) {\r\n      setUser(userData);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await authAPI.login({ email, password });\r\n\r\n      if (response.data.success) {\r\n        const { token, email: userEmail, role, userId, message } = response.data.data;\r\n\r\n        localStorage.setItem('authToken', token);\r\n        localStorage.setItem('userData', JSON.stringify({ email: userEmail, role, userId }));\r\n\r\n        setUser({ email: userEmail, role, userId });\r\n        return { success: true, message: message || 'Login successful!' };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Login failed. Please try again.';\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  const registerDonor = async (donorData) => {\r\n    try {\r\n      const response = await authAPI.registerDonor(donorData);\r\n      return handleRegistrationResponse(response);\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Registration failed. Please try again.';\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  const registerNGO = async (ngoData) => {\r\n    try {\r\n      const response = await authAPI.registerNGO(ngoData);\r\n      return handleRegistrationResponse(response);\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Registration failed. Please try again.';\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  const registerAdmin = async (adminData) => {\r\n    try {\r\n      const response = await authAPI.registerAdmin(adminData);\r\n      return handleRegistrationResponse(response);\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || 'Registration failed. Please try again.';\r\n      return { success: false, message: errorMessage };\r\n    }\r\n  };\r\n\r\n  const handleRegistrationResponse = (response) => {\r\n    if (response.data.success) {\r\n      const { token, email, role, userId, message } = response.data.data;\r\n\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('userData', JSON.stringify({ email, role, userId }));\r\n\r\n      setUser({ email, role, userId });\r\n      return { success: true, message: message || 'Registration successful!' };\r\n    } else {\r\n      return { success: false, message: response.data.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userData');\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    registerDonor,\r\n    registerNGO,\r\n    registerAdmin,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE5CE,SAAS,CAAC,MAAM;IACd,MAAMgB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IAE7D,IAAIF,KAAK,IAAIG,QAAQ,EAAE;MACrBN,OAAO,CAACM,QAAQ,CAAC;IACnB;IACAJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMxB,OAAO,CAACqB,KAAK,CAAC;QAAEC,KAAK;QAAEC;MAAS,CAAC,CAAC;MAEzD,IAAIC,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;QACzB,MAAM;UAAEX,KAAK;UAAEO,KAAK,EAAEK,SAAS;UAAEC,IAAI;UAAEC,MAAM;UAAEC;QAAQ,CAAC,GAAGN,QAAQ,CAACC,IAAI,CAACA,IAAI;QAE7ET,YAAY,CAACe,OAAO,CAAC,WAAW,EAAEhB,KAAK,CAAC;QACxCC,YAAY,CAACe,OAAO,CAAC,UAAU,EAAEZ,IAAI,CAACa,SAAS,CAAC;UAAEV,KAAK,EAAEK,SAAS;UAAEC,IAAI;UAAEC;QAAO,CAAC,CAAC,CAAC;QAEpFjB,OAAO,CAAC;UAAEU,KAAK,EAAEK,SAAS;UAAEC,IAAI;UAAEC;QAAO,CAAC,CAAC;QAC3C,OAAO;UAAEH,OAAO,EAAE,IAAI;UAAEI,OAAO,EAAEA,OAAO,IAAI;QAAoB,CAAC;MACnE,CAAC,MAAM;QACL,OAAO;UAAEJ,OAAO,EAAE,KAAK;UAAEI,OAAO,EAAEN,QAAQ,CAACC,IAAI,CAACK;QAAQ,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAMC,YAAY,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBT,IAAI,cAAAU,oBAAA,uBAApBA,oBAAA,CAAsBL,OAAO,KAAI,iCAAiC;MACvF,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEI,OAAO,EAAEM;MAAa,CAAC;IAClD;EACF,CAAC;EAED,MAAMC,aAAa,GAAG,MAAOC,SAAS,IAAK;IACzC,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMxB,OAAO,CAACqC,aAAa,CAACC,SAAS,CAAC;MACvD,OAAOC,0BAA0B,CAACf,QAAQ,CAAC;IAC7C,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA,IAAAO,gBAAA,EAAAC,qBAAA;MACd,MAAML,YAAY,GAAG,EAAAI,gBAAA,GAAAP,KAAK,CAACT,QAAQ,cAAAgB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBf,IAAI,cAAAgB,qBAAA,uBAApBA,qBAAA,CAAsBX,OAAO,KAAI,wCAAwC;MAC9F,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEI,OAAO,EAAEM;MAAa,CAAC;IAClD;EACF,CAAC;EAED,MAAMM,WAAW,GAAG,MAAOC,OAAO,IAAK;IACrC,IAAI;MACF,MAAMnB,QAAQ,GAAG,MAAMxB,OAAO,CAAC0C,WAAW,CAACC,OAAO,CAAC;MACnD,OAAOJ,0BAA0B,CAACf,QAAQ,CAAC;IAC7C,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA,IAAAW,gBAAA,EAAAC,qBAAA;MACd,MAAMT,YAAY,GAAG,EAAAQ,gBAAA,GAAAX,KAAK,CAACT,QAAQ,cAAAoB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBnB,IAAI,cAAAoB,qBAAA,uBAApBA,qBAAA,CAAsBf,OAAO,KAAI,wCAAwC;MAC9F,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEI,OAAO,EAAEM;MAAa,CAAC;IAClD;EACF,CAAC;EAED,MAAMU,aAAa,GAAG,MAAOC,SAAS,IAAK;IACzC,IAAI;MACF,MAAMvB,QAAQ,GAAG,MAAMxB,OAAO,CAAC8C,aAAa,CAACC,SAAS,CAAC;MACvD,OAAOR,0BAA0B,CAACf,QAAQ,CAAC;IAC7C,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA,IAAAe,gBAAA,EAAAC,qBAAA;MACd,MAAMb,YAAY,GAAG,EAAAY,gBAAA,GAAAf,KAAK,CAACT,QAAQ,cAAAwB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBvB,IAAI,cAAAwB,qBAAA,uBAApBA,qBAAA,CAAsBnB,OAAO,KAAI,wCAAwC;MAC9F,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEI,OAAO,EAAEM;MAAa,CAAC;IAClD;EACF,CAAC;EAED,MAAMG,0BAA0B,GAAIf,QAAQ,IAAK;IAC/C,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,EAAE;MACzB,MAAM;QAAEX,KAAK;QAAEO,KAAK;QAAEM,IAAI;QAAEC,MAAM;QAAEC;MAAQ,CAAC,GAAGN,QAAQ,CAACC,IAAI,CAACA,IAAI;MAElET,YAAY,CAACe,OAAO,CAAC,WAAW,EAAEhB,KAAK,CAAC;MACxCC,YAAY,CAACe,OAAO,CAAC,UAAU,EAAEZ,IAAI,CAACa,SAAS,CAAC;QAAEV,KAAK;QAAEM,IAAI;QAAEC;MAAO,CAAC,CAAC,CAAC;MAEzEjB,OAAO,CAAC;QAAEU,KAAK;QAAEM,IAAI;QAAEC;MAAO,CAAC,CAAC;MAChC,OAAO;QAAEH,OAAO,EAAE,IAAI;QAAEI,OAAO,EAAEA,OAAO,IAAI;MAA2B,CAAC;IAC1E,CAAC,MAAM;MACL,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEI,OAAO,EAAEN,QAAQ,CAACC,IAAI,CAACK;MAAQ,CAAC;IAC3D;EACF,CAAC;EAED,MAAMoB,MAAM,GAAGA,CAAA,KAAM;IACnBlC,YAAY,CAACmC,UAAU,CAAC,WAAW,CAAC;IACpCnC,YAAY,CAACmC,UAAU,CAAC,UAAU,CAAC;IACnCvC,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMwC,KAAK,GAAG;IACZzC,IAAI;IACJU,KAAK;IACLgB,aAAa;IACbK,WAAW;IACXI,aAAa;IACbI,MAAM;IACNrC;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACkD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA3C,QAAA,EAChCA;EAAQ;IAAA6C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/C,GAAA,CApGWF,YAAY;AAAAkD,EAAA,GAAZlD,YAAY;AAAA,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}